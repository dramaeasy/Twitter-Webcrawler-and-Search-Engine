/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2015-03-09 06:17:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.util.regex.*;
import proj.TwitterIndex;
import org.apache.lucene.search.TopDocs;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.document.Document;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.util.regex");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.lucene.search.TopDocs");
    _jspx_imports_classes.add("org.apache.lucene.document.Document");
    _jspx_imports_classes.add("proj.TwitterIndex");
    _jspx_imports_classes.add("org.apache.lucene.search.ScoreDoc");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title> CS172 Project Demo </title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".cursorHand{  cursor: pointer;   cursor: hand; }\t\r\n");
      out.write("#container {    margin:0 auto;    width: 50%;\tfloat: center;\ttext-align: center;\tpostion: relative;}\r\n");
      out.write("#contents {    width: 100%;\ttext-align: left;\tfloat: center;}\t\r\n");
      out.write("#masthead {width: 100%;height: 60px;text-align: center;background-color: #0099cc;float: center;margin:0 auto;}\r\n");
      out.write("#results_area {margin-top: 30px;}\r\n");
      out.write("#form {\tfloat: center;margin-top: 30px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body topmargin=\"0\" leftmargin=\"10\" rightmargin=\"10\" bottommargin=\"20\">\r\n");
 
String queryString = "";
String dir = "C:\\Users\\Patrick\\workspace\\cs172part2";
String searchField = "1";
Integer answerSize = 10;

      out.write('\r');
      out.write('\n');

	if (request.getParameter("search_submit") != null) 
	{
		queryString = request.getParameter("queryString");
		searchField = request.getParameter("searchField");
	}

      out.write("\r\n");
      out.write("<div id=\"page\">\r\n");
      out.write("\t<div id=\"masthead\">\r\n");
      out.write("\t\t<font size=\"20\" color=\"#ffffff\">CS172 Twitter Search</font>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<div id=\"form\">\r\n");
      out.write("\t\t\t<form action=\"index.jsp\" method=\"POST\">\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"queryString\" value=\"");
 out.println(queryString); 
      out.write("\" size=\"40\" /> \r\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"Search\" name=\"search_submit\" style=\"cursor: pointer; cursor: hand;\" /> \r\n");
      out.write("  \t\t\t\t\r\n");
      out.write("   \t\t\t\t<select name=\"searchField\">\r\n");
      out.write("        \t\t<option value=\"1\">Text Of Tweet</option>\r\n");
      out.write("        \t\t<option value=\"2\">Hash Tags</option>\r\n");
      out.write("        \t\t<option value=\"3\">User Names</option>\r\n");
      out.write("    \t\t\t</select>\t\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"contents\">\t\t\r\n");
      out.write("\t\t\t<div id=\"results_area\">\r\n");
      out.write("\t\t\t\t\t");

					System.out.println("Selection: " + searchField);
					
					if(queryString.trim().length() > 0)
					{
						Document[] hits = TwitterIndex.searchIndex(dir, queryString, searchField);
						String [] queryList = queryString.split("\\s+");
						
							if (answerSize > 1) {
								out.print("<hr />");
							}
							
							for(int i = 0; i < hits.length; i++)
							{									
								if(hits[i] != null)
								{
									String url = "<div class=\"title\"><a href=\"http://twitter.com/" + hits[i].get("userName") + "\"" + "target=\"_blank\">" + "@" + hits[i].get("userName") + "</a></div>";
									
									String tweetText = "";
									String two = "2";

									tweetText = hits[i].get("text");
									
									out.print("<div class=\"results\">");
									out.print(url);
									
									String outputText = "";
									String [] tweetTextParsed = tweetText.split("\\s+");
									
									for(int j = 0; j < tweetTextParsed.length; j++)
									{
										String originalLower = tweetTextParsed[j].toLowerCase();
										boolean wordInQuery = false;
										
										for(int k = 0; k < queryList.length; k++)
										{
											String queryLower = queryList[k].toLowerCase();
											
											if(originalLower.indexOf(queryLower) != -1)
											{
												wordInQuery = true;
												break;
											}
										}
										
										if(wordInQuery)
										{
											String start = "<b>";
											String middle = tweetTextParsed[j];
											outputText += (start + middle + "</b> ");
										}
										else
										{
											outputText += (tweetTextParsed[j] + " ");
										}
									}
								
								
									out.print("<div class=\"snippet\">" + outputText +  "</div>");
									out.print("</div><br />");	
								}
							}
						
							
							if(hits.length == 0)
							{
								out.print("<div class=\"results\">");
								out.print("<div class=\"snippet\">" + "Sorry No Search Results :(" +  "</div>");
								out.print("</div><br />");	
							}
					}
					else
					{
						out.print("<div class=\"results\">");
						out.print("<div class=\"snippet\">" + "Input A Search!" +  "</div>");
						out.print("</div><br />");	
					}
					
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
